# - name: Registro Maquina Linux
#   hosts: all
#   gather_facts: no
#   tasks:
#     - name: subscription-manager clean and unregister
#       command: subscription-manager clean
   
#     - name: Register as user alessandro auto-subscribe to available content.
#       command: subscription-manager register --username "{{sub_username}}" --password "{{sub_password}}" --auto-attach

# - name: Change hostname Event Drive Ansible
#   hosts: 172.20.33.53
#   gather_facts: no
#   tasks:
#     - name: Change hostname Event Drive Ansible
#       command: hostname vm-ansible-eda

# - name: Change hostname Automation Controller
#   hosts: 172.20.33.52
#   gather_facts: no
#   tasks:
#     - name: Change hostname Automation Controller
#       command: hostname vm-ansible-automationcontroller

# - name: Change hostname Automation Hub
#   hosts: 172.20.33.51
#   gather_facts: no
#   tasks:
#     - name: Change hostname Automation Hub
#       command: hostname vm-ansible-automationhub

- name: Change hostname db server
  hosts: 172.20.33.54
  gather_facts: no
  tasks:
    # - name: Change hostname Database Server
    #   command: hostname vm-ansible-db

    # - name: Remove all Postgres Package
    #   command: dnf -y remove postgres\*

    # - name: Install Repo
    #   command: dnf -y install https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm

    # - name: Disable Module
    #   command: dnf -qy module disable postgresql

    # - name: "Install packages"
    #   command: dnf -y install postgresql15-server
    
    # - name: "Install packages"
    #   dnf: "name={{ item }} state=present"
    #   with_items:
    #     - postgresql15-server
    
    # - name: "Find out if PostgreSQL is initialized"
    #   ansible.builtin.stat:
    #     path: "/var/lib/pgsql/15/data/pg_hba.conf"
    #   register: postgres_data

    # - name: "Initialize PostgreSQL"
    #   shell: "postgresql-setup initdb"
    #   when: not postgres_data.stat.exists
 
    # - name: "Start and enable services"
    #   service: "name={{ item }} state=started enabled=yes"
    #   with_items:
    #     - postgresql-15
    - name: Ensure the default Apache port is 8080
      ansible.builtin.lineinfile:
        path: /var/lib/pgsql/15/data/postgresql.conf
        regexp: '^listen_addresses'
        insertafter: '^#listen_addresses'
        line: listen_addresses '*' 
    # - name: "Create awx database"
    #   postgresql_db:
    #     state: present
    #     name: "{{ db_name }}"
    #   become: yes
    #   become_user: postgres

    # - name: "Create db user"
    #   postgresql_user:
    #     state: present
    #     name: "{{ db_user }}"
    #     password: "{{ db_password }}"
    #   become: yes
    #   become_user: postgres

    # - name: "Grant db user access to awx db"
    #   postgresql_privs:
    #     type: database
    #     database: "{{ db_name }}"
    #     roles: "{{ db_user }}"
    #     grant_option: no
    #     privs: all
    #   become: yes
    #   become_user: postgres

    # - name: "Allow md5 connection for the db user"
    #   postgresql_pg_hba:
    #     dest: "~/data/pg_hba.conf"
    #     contype: host
    #     databases: all
    #     method: md5
    #     users: "{{ db_user }}"
    #     create: true
    #   become: yes
    #   become_user: postgres
    #   notify: restart postgres
